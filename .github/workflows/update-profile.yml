name: Update GitHub Profile

on:
  push:
    branches: [ main ]
  schedule:
    # Run every Sunday at 00:00 UTC
    - cron: '0 0 * * 0'

jobs:
  update-profile:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Validate Markdown
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const markdown = fs.readFileSync('README.md', 'utf8');
          
          // Basic validation checks
          if (!markdown.includes('Hamdi Soudani')) {
            core.setFailed('README must contain name');
          }
          
          if (!markdown.includes('Full-Stack Developer')) {
            core.setFailed('README must contain professional title');
          }
          
          console.log('✅ Markdown validation passed');
    
    - name: Check for broken links
      uses: peter-evans/link-checker@v1
      with:
        args: --verbose --check-anchors
    
    - name: Generate profile stats
      uses: anuraghazra/github-readme-stats@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Notify on success
      if: success()
      uses: 8398a7/action-slack@v3
      with:
        status: success
        text: 'GitHub profile updated successfully'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  accessibility-check:
    runs-on: ubuntu-latest
    needs: update-profile
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Run basic accessibility checks
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const html = fs.readFileSync('README.md', 'utf8');
          
          // Check for accessibility attributes
          const checks = {
            'aria-labels': html.includes('aria-label'),
            'semantic-headings': (html.match(/<h[1-6]/g) || []).length >= 3,
            'alt-text': html.includes('alt=') || !html.includes('<img'),
            'contrast-ratio': html.includes('var(--primary-color)') && html.includes('var(--text-primary)'),
            'focus-styles': html.includes(':focus') || html.includes('outline')
          };
          
          const failedChecks = Object.entries(checks)
            .filter(([_, passed]) => !passed)
            .map(([check]) => check);
          
          if (failedChecks.length > 0) {
            core.warning(`Accessibility issues: ${failedChecks.join(', ')}`);
          } else {
            console.log('✅ All accessibility checks passed');
          }